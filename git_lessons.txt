#####################################################
	КОМАНДНАЯ СТРОКА И ВСЕ О НЕЙ
#####################################################

Обратите внимание: если в названии папки есть пробелы, при вводе нужно использовать кавычки.

$ cd "Фотографии с дня рождения"

#####################################################

$ cd .. # переходим на уровень выше

####################################################

$ ls -a # вывели список, в котором отображаются скрытые файлы ., .. и .git
.
..
.git
file.txt
photo.png 

####################################################

ls ~ выведет содержимое домашней директории вне зависимости от того, что показывает pwd

ls .. покажет содержимое родительской директории

####################################################

$ touch my-new-file.txt # создали файл my-new-file.txt 

####################################################

$ mkdir new-dir # создали директорию new-dir 

####################################################

Можно создать целую структуру директорий одной командой с помощью флага -p
$ mkdir -p dir1/dir-inside/dir-deeper-inside
# создали папку dir-deeper-inside в папке dir-inside, которая находится в папке dir1 

####################################################

команда mkdir ~/my-git-projects создаст папку my-git-projects внутри домашней директории

####################################################

команда touch ../../file.txt создаст файл file.txt на две папки выше по иерархии.

если вы находитесь в директории projects/git/hello, команда touch ../../file.txt создаст файл по такому пути: projects/file.txt

####################################################

$ cp что_копируем куда_копируем

$ cp index.html src/
# скопировали index.html в папку src

####################################################

Копирование файлов — cp
Но можно указать сразу несколько файлов.
$ cp что_копируем что_копируем что_копируем куда_копируем

$ cp index.html style.css script.js src/
# скопировали три файла (index.html, style.css и script.js) в папку src 


####################################################

Перемещение файлов и папок - mv
$ mv table.csv ./very-important-files
# сначала указываем имя файла, который хотим переместить, потом путь — куда перемещаем 

$ cd very-important-files
$ ls
table.csv 
# перешли в папку very-important-files и проверили, что всё сработало 

####################################################

Чтение файлов — cat
$ cat myfile.txt # распечатали содержимое файла myfile.txt
file-content-1
file-content-2 
Команда cat работает только с текстовыми файлами

####################################################

Удаление файлов и папок — rm, rmdir, rm -r

$ rm example.txt # удалили файл example.txt из текущей папки
$ rmdir images # команда удалит папку images из текущей директории, # если папка images пуста 

$ rm -r images # удалили папку images со всем её содержимым из текущей директории

Будьте осторожны: удаление объектов командами rm и rmdir необратимо — в этом случае файлы и папки не попадают в корзину и исчезают навсегда.

####################################################

Выполняйте сразу несколько команд

 Для этого их нужно разделить двумя амперсандами (&&).

$ mkdir second-project && cd second-project && touch index.html style.css
# создаём папку second-project,
# переходим в папку second-project
# и создаём в ней два файла: index.html и style.css 

####################################################

$ cd / # перемещает в корневую директорию 
/ - то же
~ - в домашнюю - все можно БЕЗ cd



####################################################
			GIT И ВСЕ О НЕМ
#####################################################

$ git config --global user.name "User Namovich" 
# имя или ник нужно написать латиницей и в кавычках

$ git config --global user.email username@yandex.ru
# здесь нужно указать свой настоящий email 

не имеет значения, в какой директории вы находитесь прямо сейчас: вызов git config --global сработает везде

####################################################
Все глобальные настройки Git хранит в файле .gitconfig в домашней директории

$ cat ~/.gitconfig 
или 
$ git config --list
####################################################

«Разгитить» папку, если что-то пошло не так, — rm -rf .git

$ cd <папка с репозиторием> # перешли в папку

$ rm -rf .git # удалили подпапку .git 

####################################################

Проверить состояние репозитория — git status

####################################################

Подготовить файлы к сохранению — git add
$ git add --all # подготовили к сохранению все файлы в репозитории
 
####################################################
Добавлять файлы можно и по одному, без ключа --all.
$ git add todo.txt
$ git add readme.txt
$ git status 

####################################################

$ git add . # добавить всю текущую папку 

####################################################

Выполнить коммит — git commit
$ git commit -m 'Мой первый коммит!' 
####################################################

Просмотреть историю коммитов — git log

####################################################
		
		ЗНАКОМСТВО С GITHUB

####################################################
$ cd ~ # перешли в домашнюю директорию 
$ ls -la .ssh/ # вывели список созданных ключей 
$ ssh-keygen -t ed25519 -C "электронная почта, к которой привязан ваш аккаунт на GitHub" 
или
$ ssh-keygen -t rsa -b 4096 -C "электронная почта, к которой привязан ваш аккаунт на GitHub" 
> Generating public/private rsa key pair. # сгенерированы публичный и приватный ключи 
> Enter a file in which to save the key (C:\Users\<имя_пользователя>\.ssh\):[Press enter] 
> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again] 
ls -a ~/.ssh 

####################################################
Инструкция по связыванию SSH-ключа и GitHub-аккаунта

Скопируйте содержимое файла с публичным ключом в буфер обмена.

# скопировать содержимое ключа в буфер обмена:
$ clip < ~/.ssh/id_rsa.pub

Если clip не сработает, выведите содержимое файла с помощью cat ~/.ssh/id_rsa.pub или cat ~/.ssh/id_ed25519.pub и скопируйте вывод в буфер обмена из консоли.

добавь новый ключ на сайте гитхаба

Проверьте правильность ключа с помощью следующей команды.
$ ssh -T git@github.com 

Hi %ВАШ_АККАУНТ%! You've successfully authenticated, but GitHub does not provide shell access. 


####################################################

Привязать удалённый репозиторий к локальному — git remote add

Перейдите на страницу удалённого репозитория, выберите тип SSH и скопируйте URL. 

$ cd ~/dev/first-project
$ git remote add origin git@github.com:%ИМЯ_АККАУНТА%/first-project.git 

####################################################
Убедиться, что репозитории связаны, — git remote -v
$ git remote -v
origin    git@github.com:%ИМЯ_АККАУНТА%/%ИМЯ-ПРОЕКТА%.git (fetch)
origin    git@github.com:%ИМЯ_АККАУНТА%/%ИМЯ-ПРОЕКТА%.git (push)

####################################################
Отправить изменения на удалённый репозиторий — git push

$ git push -u origin main # Если команда приведёт к ошибке, попробуйте заменить main на master.

В первый раз эту команду нужно вызвать с флагом -u и параметрами origin (имя удалённого репозитория) 
В следующие разы уже не нужно.

####################################################
Получить сокращённый лог — git log --oneline

####################################################
Файл HEAD (англ. «голова», «головной») — один из служебных файлов папки .git. Он указывает на коммит, который сделан последним (то есть на самый новый).

$ cd .git/
$ ls # посмотрели, какие есть файлы
COMMIT_EDITMSG  ORIG_HEAD  description  index  logs/     refs/
HEAD            config     hooks/       info/  objects/

$ cat HEAD # команда cat показывает содержимое файла
ref: refs/heads/master # в файле вот такая ссылка 

$ cat refs/heads/master # взяли ссылку из файла HEAD
# внутри хеш
e007f5035f113f9abca78fe2149c593959da5eb7

 Если нужно передать последний коммит, то вместо его хеша можно просто написать слово HEAD — Git поймёт, что вы имели в виду последний коммит.
####################################################



####################################################



####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################



####################################################



####################################################




####################################################



####################################################



####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################



####################################################



####################################################




####################################################



####################################################



####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################



####################################################



####################################################




####################################################



####################################################



####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################



####################################################



####################################################





####################################################



####################################################



####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################


####################################################



####################################################



####################################################



####################################################












































































##############################################